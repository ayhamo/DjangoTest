# Generated by Django 3.2.7 on 2021-09-15 08:53

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('course_type', models.IntegerField(choices=[(1, 'Online'), (0, 'Offline')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_q', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='UserJoinsCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_unlocked', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.payment')),
            ],
        ),
        migrations.CreateModel(
            name='UserSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
            ],
        ),
        migrations.CreateModel(
            name='OfflineCourse',
            fields=[
                ('course', models.OneToOneField(default=1, on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='offline', serialize=False, to='CourseApp.course')),
                ('e_time', models.TimeField()),
                ('b_time', models.TimeField()),
                ('e_date', models.DateField()),
                ('b_date', models.DateField()),
                ('location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineCourse',
            fields=[
                ('course', models.OneToOneField(default=1, on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='online', serialize=False, to='CourseApp.course')),
                ('raters', models.FloatField()),
                ('rating', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
                ('duration', models.CharField(max_length=50)),
                ('lessons_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('uid', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=50, null=True)),
                ('info_complete', models.BooleanField(default=False)),
                ('token', models.CharField(max_length=15, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('second_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')], null=True)),
                ('age_group', models.CharField(max_length=50, null=True)),
                ('level', models.IntegerField(null=True)),
                ('username', models.CharField(blank=True, default='noUsername', help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, verbose_name='username')),
                ('courses', models.ManyToManyField(through='CourseApp.UserJoinsCourse', to='CourseApp.Course')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('segment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='CourseApp.usersegment')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userjoinscourse',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.surveychoice')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.surveyquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('answer_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Choice', to='CourseApp.choice')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.exam')),
            ],
        ),
        migrations.CreateModel(
            name='PDF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.URLField()),
                ('name', models.CharField(max_length=100)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.URLField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Question', to='CourseApp.question'),
        ),
        migrations.AddField(
            model_name='category',
            name='img',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.image'),
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.exam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='userjoinscourse',
            unique_together={('user', 'course')},
        ),
        migrations.AddField(
            model_name='lesson',
            name='online_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.onlinecourse'),
        ),
        migrations.AddField(
            model_name='exam',
            name='online_coruse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.onlinecourse'),
        ),
        migrations.CreateModel(
            name='AttemptSolveQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.attempt')),
                ('picked_choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.choice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CourseApp.question')),
            ],
            options={
                'unique_together': {('attempt', 'question', 'picked_choice')},
            },
        ),
    ]
